(async () => {
    // Sends a message to the service worker and receives vulnerability names
    const { names } = await chrome.runtime.sendMessage({
        greeting: 'names'
    });

    const { sections } = await chrome.runtime.sendMessage({
        greeting: 'sections'
    });

    // Insert Control Panel
    fetch(chrome.runtime.getURL("/html/index.html"))
        .then((res) => res.text())
        .then((html) => {
            document.body.insertAdjacentHTML('beforeend', html);
            // not using innerHTML as it would break js event listeners of the page

            const getField = setInterval(() => {
                const searchField = document.body.querySelector('.search-wrapper .form-control');

                if (searchField) {
                    searchField.setAttribute('names', JSON.stringify(names));
                    searchField.setAttribute('sections', JSON.stringify(sections));

                    clearInterval(getField);

                    injectScript('/scripts/content-frontend.js');

                    const prev = document.getElementById('hp-prev');
                    const next = document.getElementById('hp-next');

                    // Listen to invoked key commands
                    chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
                        // click() returns undefined, so invert it to true 
                        // to prevent next statement execution
                        ( (message.action === "prev_name") && !prev.click() )
                        || ( (message.action === "next_name") && next.click() )
                        // Get another search field
                        || ( (message.action === "change_search") && prepareSearch() ) 
                    });
                }
            }, 3000);
        })
        .catch((e) => console.error(e));
})();

function injectScript(src) {
    const s = document.createElement('script');
    s.src = chrome.runtime.getURL(src);
    (document.body || document.documentElement).append(s);
}

function prepareSearch() {
    window.dispatchEvent(new Event('vd.changeSearch'));
}